{"name":"Theory-of-algorithms-363","tagline":"algorithms and complexity theory","body":"\r\n## Theory of Algorithms\r\n\r\nThis repository contains the exams (with solutions) for an upper level undergraduate course in algorithms which I taught in Spring 2012. The course covered chapters 1-6 and 8 of [Kleinberg and Tardos](http://www.amazon.com/Algorithm-Design-Jon-Kleinberg/dp/0321295358); the book is fantastic and is highly recommended.\r\n\r\nThese links will render the pdf files in this repository in your browser. See [here](http://webapps.stackexchange.com/questions/48061/can-i-trick-github-into-displaying-the-pdf-in-the-browser-instead-of-downloading) for the explanation.\r\n* [final-exam+solutions.pdf](http://sshastry.github.io/theory-of-algorithms-363/final-exam+solutions.pdf)\r\n* [midterm-exam+solutions.pdf](http://sshastry.github.io/theory-of-algorithms-363/midterm-exam+solutions.pdf)\r\n\r\nThe topics covered:\r\n\r\n* introduction: the stable matching problem\r\n* big-O notation\r\n* heaps\r\n* priority queues\r\n* graph traversal\r\n    * breadth first traversal of graphs\r\n    * depth first traversal of graphs\r\n    * data structures for implementing graph traversal: queues and stacks\r\n    * directed acyclic graphs (DAGs) and topological ordering\r\n* greedy algorithms\r\n    * interval scheduling\r\n    * Dijkstra's algorithm to find the shortest paths in a graph\r\n    * minimum spanning trees: algorithms of Kruskal and Prim\r\n        * data structure for Prim: priority queue\r\n        * data structure for Kruskal: union-find\r\n    * Huffman coding\r\n* divide and conquer algorithms\r\n    * the master theorem for recurrences\r\n    * mergesort\r\n    * integer multiplication of two n-bit factors in `O(n^{log_2(3)}) = O(n^{1.59})`\r\n    * Fast Fourier Transform\r\n* dynamic programming\r\n    * memoized interval scheduling\r\n    * segmented least squares\r\n    * subset sum and knapsack\r\n    * RNA secondary structures\r\n    * sequence alignment\r\n    * Bellman-Ford algorithm for finding shortest paths in a graph\r\n    * detection of negative cycles in a graph\r\n* complexity theory\r\n    * polynomial time reductions\r\n    * the definition of P\r\n    * the definition of NP\r\n    * problems and some reductions amongst them\r\n        * vertex cover\r\n        * set cover\r\n        * SAT and 3-SAT\r\n        * subset sum\r\n        * traveling salesman\r\n        * Hamiltonian cycle\r\n        * graph coloring\r\n        * circuit satisfiability\r\n    * theorem: there exists an NP-complete problem\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}